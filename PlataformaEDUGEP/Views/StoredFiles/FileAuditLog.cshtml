@model IEnumerable<PlataformaEDUGEP.Models.FileAuditViewModel>

@{
    ViewData["Title"] = "File Audit Log";
    var currentFilterUser = ViewData["CurrentFilterUser"]?.ToString();
    var currentFilterAction = ViewData["CurrentFilterAction"]?.ToString();
    var currentFilterFileTitle = ViewData["CurrentFilterFileTitle"]?.ToString();
    var currentFilterFolderName = ViewData["CurrentFilterFolderName"]?.ToString();
}

<h2>Relatório de ocorrências de ficheiros</h2>

<form class="my-2 my-lg-0">
    <div class="d-flex flex-row">
        <input class="form-control mr-2" type="search" oninput="updateFileAuditLog()" placeholder="Utilizador" aria-label="Search User" name="searchUser" value="@currentFilterUser">
        <input class="form-control mr-2" type="search" oninput="updateFileAuditLog()" placeholder="Ação" aria-label="Search Action" name="searchAction" value="@currentFilterAction">
        <input class="form-control mr-2" type="search" oninput="updateFileAuditLog()" placeholder="Título do Arquivo" aria-label="Search File Title" name="searchFileTitle" value="@currentFilterFileTitle">
        <input class="form-control mr-2" type="search" oninput="updateFileAuditLog()" placeholder="Nome da Pasta" aria-label="Search Folder Name" name="searchFolderName" value="@currentFilterFolderName">
    </div>
</form>

<div class="mt-2 d-flex align-items-center">
    <button id="clearFiltersButton" onclick="clearFilters()" class="btn btn-secondary mr-2" style="display: none;">Limpar filtros</button>
    <b class="ms-lg-2">Ordenar:</b>

    <!-- Adjust the initial data-sort-order and icon class to match the default sort order -->
    <a href="#" id="sortOrderLink" data-sort-order="time_desc" class="ms-lg-2">
        Hora <i class="fas fa-arrow-down"></i> <!-- Default is desc so show arrow down -->
    </a>

    <form asp-action="ClearAuditLog" asp-controller="Folders" method="post" class="ms-lg-3">
        @Html.AntiForgeryToken()
        <!-- Button to trigger modal -->
        <!-- Button to trigger modal -->
        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteRecordsModal">
            Resetar registro de ocorrências
        </button>
    </form>

</div>

<!-- Delete Records Modal -->
<div class="modal fade" id="deleteRecordsModal" tabindex="-1" aria-labelledby="deleteRecordsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteRecordsModalLabel">Apagar todo os registos</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                De certeza que quer apagar o registo de ocorrências de ficheiros? Esta ação não pode ser desfeita.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <!-- Correct the button ID for consistency with your script -->
                <button type="button" class="btn btn-danger" id="deleteAllRecordsButton">Apagar</button>

            </div>
        </div>
    </div>
</div>

<div id="file-audit-log-table" class="mt-2">
    @Html.Partial("_FileAuditLogTablePartial", Model)
</div>

<nav aria-label="Page navigation">
    <ul class="pagination">
        @for (int i = 1; i <= Convert.ToInt32(ViewData["TotalPages"]); i++)
        {
            <li class="page-item @(i == Convert.ToInt32(ViewData["CurrentPage"]) ? "active" : "")">
                <a class="page-link" href="javascript:void(0)" onclick="updateFileAuditLog(@i)">@i</a>
            </li>
        }
    </ul>
</nav>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function () {
            // Function to check input fields and toggle the visibility of the clear filters button
            function toggleClearFiltersButton() {
                var isAnyFilterApplied = $("input[type='search']").toArray().some(function (input) {
                    return $(input).val() !== '';
                });

                if (isAnyFilterApplied) {
                    $("#clearFiltersButton").show();
                } else {
                    $("#clearFiltersButton").hide();
                }
            }

            function updateFileAuditLog(page = 1) {
                const searchUser = $("input[name='searchUser']").val();
                const searchAction = $("input[name='searchAction']").val();
                const searchFileTitle = $("input[name='searchFileTitle']").val();
                const searchFolderName = $("input[name='searchFolderName']").val();
                const sortOrder = $("#sortOrderLink").data("sort-order");

                $.ajax({
                    url: '@Url.Action("FileAuditLog", "StoredFiles")',
                    data: {
                        searchUser: searchUser,
                        searchAction: searchAction,
                        searchFileTitle: searchFileTitle,
                        searchFolderName: searchFolderName,
                        sortOrder: sortOrder,
                        page: page
                    },
                    success: function (data) {
                        $('#file-audit-log-table').html(data);
                        bindSearchEvents(); // Re-bind search events after content update
                        bindPaginationLinks(); // Also re-bind pagination links
                        toggleClearFiltersButton(); // Check if the clear filters button should be displayed
                    },
                    error: function () {
                        alert("An error occurred. Please try again.");
                    }
                });
            }

            function bindSearchEvents() {
                $("input[type='search']").off('input').on('input', function () {
                    updateFileAuditLog();
                    toggleClearFiltersButton(); // Check if the clear filters button should be displayed whenever the input changes
                });
            }

            function bindPaginationLinks() {
                $('.pagination a').off('click').on('click', function (e) {
                    e.preventDefault();
                    var pageNum = $(this).text();
                    updateFileAuditLog(pageNum);
                });
            }

            function toggleSortIcon() {
                var sortOrder = $("#sortOrderLink").data("sort-order");
                var icon = $("#sortOrderLink i");
                icon.removeClass("fa-arrow-down fa-arrow-up");
                if (sortOrder === "time_desc") {
                    icon.addClass("fa-arrow-down");
                } else {
                    icon.addClass("fa-arrow-up");
                }
            }

            $("#sortOrderLink").click(function (e) {
                e.preventDefault();
                var currentSortOrder = $(this).data("sort-order");
                var newSortOrder = currentSortOrder === "time_desc" ? "time_asc" : "time_desc";
                $(this).data("sort-order", newSortOrder);
                toggleSortIcon();
                updateFileAuditLog();
            });

            $("#clearFiltersButton").click(function () {
                $("input[type='search']").val('');
                updateFileAuditLog();
                toggleClearFiltersButton(); // Immediately hide the button after clearing the filters
            });

            // Initially bind events and set the correct sort icon
            bindSearchEvents();
            bindPaginationLinks();
            toggleSortIcon();
            updateFileAuditLog(); // Load initial audit log content
            toggleClearFiltersButton(); // Check at page load if the button should be visible
        });
    </script>

    <script>
        $(document).ready(function () {
            // Handler for the "Apagar" button click event
            $("#deleteAllRecordsButton").click(function () {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("DeleteAllFileAudits", "StoredFiles")",
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        if (response.success) {
                            alert(response.message); // Or use a more user-friendly notification
                            $('#deleteRecordsModal').modal('hide'); // Close the modal on success
                            location.reload(); // Optionally reload the page or just part of it
                        } else {
                            alert(response.message); // Handle the error
                        }
                    },
                    error: function () {
                        alert("There was an error processing your request."); // Handle AJAX errors
                    }
                });
            });
        });
    </script>
}





