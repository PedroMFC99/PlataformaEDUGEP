@model IEnumerable<PlataformaEDUGEP.Models.FolderAuditViewModel>

@{
    ViewData["Title"] = "Audit Log";
    int totalPages = (int)ViewData["TotalPages"];
    int currentPage = (int)ViewData["CurrentPage"];
}

<h2>Relatório de ocorrências de pastas</h2>

@{
    var currentFilterUser = ViewData["CurrentFilterUser"]?.ToString();
    var currentFilterAction = ViewData["CurrentFilterAction"]?.ToString();
    var currentFilterFolderName = ViewData["CurrentFilterFolderName"]?.ToString();
    var currentSort = ViewData["CurrentSort"]?.ToString();
}

<form class="my-2 my-lg-0">
    <div class="d-flex flex-row">
        <input class="form-control mr-2" type="search" oninput="updateAuditLog()" placeholder="Utilizador" aria-label="Search User" name="searchUser" value="@currentFilterUser">
        <input class="form-control mr-2" type="search" oninput="updateAuditLog()" placeholder="Tipo de ação" aria-label="Search Action" name="searchAction" value="@currentFilterAction">
        <input class="form-control mr-2" type="search" oninput="updateAuditLog()" placeholder="Nome da Pasta" aria-label="Search Folder Name" name="searchFolderName" value="@currentFilterFolderName">
    </div>
</form>


<div class="mt-2 d-flex align-items-center">
    <button id="clearFiltersButton" onclick="clearFilters()" class="btn btn-secondary mr-2" style="display: none;">Limpar filtros</button>
    <b class="ms-lg-2">Ordenar:</b>

    <!-- Adjust the initial data-sort-order and icon class to match the default sort order -->
    <a href="#" id="sortOrderLink" data-sort-order="time_desc" class="ms-lg-2">
        Hora <i class="fas fa-arrow-down"></i> <!-- Default is desc so show arrow down -->
    </a>


    <form asp-action="ClearAuditLog" asp-controller="Folders" method="post" class="ms-lg-3">
        @Html.AntiForgeryToken()
        <!-- Button to trigger modal -->
        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal">
            Resetar registo de ocorrências
        </button>
    </form>

</div>

<div id="audit-log-table">
    @Html.Partial("_AuditLogTablePartial", Model)
</div>

<nav aria-label="Page navigation example">
    <ul class="pagination">
        @for (int i = 1; i <= totalPages; i++)
        {
            <li class="page-item @(i == currentPage ? "active" : "")" onclick="updateAuditLog(null, null, null, null, @i)">
                <span class="page-link">@i</span>
            </li>
        }
    </ul>
</nav>

<!-- Delete Audit Log Modal -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteFolderModalLabel">Apagar Registo de Auditoria</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Tem a certeza que deseja apagar todo o registo de ocorrências? Esta ação não pode ser desfeita.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" onclick="clearAuditLog()">Apagar Tudo</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // Clears the search filters
        function clearFilters() {
            $("input[name='searchUser']").val('');
            $("input[name='searchAction']").val('');
            $("input[name='searchFolderName']").val('');
            $("#clearFiltersButton").hide(); // Hide the "Limpar filtros" button
            // Reset the audit log without changing the sort order
            updateAuditLog('', '', '', $('#sortOrderLink').data('sort-order'));
        }

        // Updates the visual sort icon based on the sort order
        function updateSortIcon(sortOrder) {
            var iconElement = document.querySelector('#sortOrderLink i');
            iconElement.classList.remove('fa-arrow-up', 'fa-arrow-down');
            iconElement.classList.add(sortOrder === 'time_desc' ? 'fa-arrow-down' : 'fa-arrow-up');
        }

        // Dynamically updates the audit log based on filters, sort order, and page number
        function updateAuditLog(searchUser, searchAction, searchFolderName, sortOrder, pageNumber = 1) {
            // Ensure currentSortOrder is fetched directly if not provided as an argument
            var currentSortOrder = sortOrder || $('#sortOrderLink').data('sort-order');

            $.ajax({
                url: '@Url.Action("AuditLog", "Folders")',
                data: {
                    searchUser: searchUser || $("input[name='searchUser']").val(),
                    searchAction: searchAction || $("input[name='searchAction']").val(),
                    searchFolderName: searchFolderName || $("input[name='searchFolderName']").val(),
                    sortOrder: currentSortOrder,
                    pageNumber: pageNumber, // Pass the pageNumber for pagination
                    pageSize: @ViewData["PageSize"]
                },
                type: 'GET',
                success: function (result) {
                    $('#audit-log-table').html(result);
                    toggleClearFiltersButton();

                    // Update pagination active state
                    updatePaginationActiveState(pageNumber);
                },
                error: function (xhr, status, error) {
                    console.error("Error fetching audit log data: ", status, error);
                }
            });
        }

        // Updates active state on pagination
        function updatePaginationActiveState(activePageNumber) {
            $('.pagination .page-item').removeClass('active'); // Remove active class from all
            $('.pagination .page-item').each(function () {
                if (parseInt($(this).text()) === activePageNumber) {
                    $(this).addClass('active'); // Add active class to the clicked page number
                }
            });
        }

        // Function to handle clear audit log confirmation and action
        function clearAuditLog() {
            if (!confirm('Tem a certeza que deseja apagar todo o registo de auditoria das pastas? Esta ação não pode ser desfeita.')) {
                return;
            }

            $.ajax({
                type: "POST",
                url: '@Url.Action("ClearAuditLog", "Folders")',
                beforeSend: function (xhr) {
                    var token = $('input[name="__RequestVerificationToken"]').val();
                    xhr.setRequestHeader("RequestVerificationToken", token);
                },
                success: function (response) {
                    if (response.success) {
                        alert("Registo de auditoria das pastas apagado com sucesso.");
                        $('#confirmDeleteModal').modal('hide'); // Close the modal dialog
                        // Refresh the audit log section of the page
                        updateAuditLog(); // Call the function to refresh the audit log display

                        // Hide or remove pagination controls
                        $('.pagination').hide(); // or $('.pagination').empty();
                    } else {
                        alert(response.message); // Show the error message from the server
                    }
                },
                error: function (xhr, status, error) {
                    alert("Erro ao apagar o registo de auditoria das pastas: " + error);
                }
            });
        }

        // Toggles the visibility of the "Limpar filtros" button based on input content
        function toggleClearFiltersButton() {
            const hasValue = $("input[name='searchUser']").val() || $("input[name='searchAction']").val() || $("input[name='searchFolderName']").val();
            $("#clearFiltersButton").toggle(!!hasValue);
        }

        $(document).ready(function () {
            // Event handler for sort order change
            $('#sortOrderLink').click(function (e) {
                e.preventDefault();
                var currentSortOrder = $(this).data('sort-order');
                var newSortOrder = currentSortOrder === 'time_desc' ? 'time_asc' : 'time_desc';
                $(this).data('sort-order', newSortOrder);
                updateSortIcon(newSortOrder);
                updateAuditLog(null, null, null, newSortOrder);
            });

            // Bind input change events to toggle the clear filters button
            $("input").on('input', toggleClearFiltersButton);
            toggleClearFiltersButton(); // Ensure correct initial state
        });
    </script>
}

