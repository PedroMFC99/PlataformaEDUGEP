@model PlataformaEDUGEP.Models.Folder

@{
    ViewData["Title"] = "Ver ficheiros";
}

<div class="container-fluid">
    <div class="row align-items-center mb-3">
        <div class="col-auto">
            <a href="@Url.Action("Index")" class="btn btn-link"><i class="fas fa-arrow-left"></i> Voltar</a>
        </div>
        <div class="col d-flex justify-content-start align-items-center">
            <h4 class="mb-0">Detalhes</h4>ss
        </div>
    </div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CreationDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CreationDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ModificationDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ModificationDate)
        </dd>

        <!-- Display Tags -->
        <dt class="col-sm-2">Etiquetas</dt>
        <dd class="col-sm-10">
            @if (Model.Tags != null && Model.Tags.Any())
            {
                foreach (var tag in Model.Tags)
                {
                    <span class="badge bg-info">@tag.Name</span>
                }
            }
            else
            {
                <span>Nenhuma etiqueta associada.</span>
            }
        </dd>

        <dt class="col-sm-2">
            Criador por:
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.User.FullName)
        </dd>
    </dl>
</div>

<h4>Ficheiros</h4>


@if (User.IsInRole("Teacher") || User.IsInRole("Admin"))
{
    <div class="d-flex justify-content-end mb-3">
        <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createFileModal"><i class="fas fa-plus"></i></button>
    </div>
}

<!-- Button to Open the Modal -->
@*<div class="d-flex justify-content-end mb-3">
    @if (User.IsInRole("Teacher") || User.IsInRole("Admin"))
    {
        <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createFileModal"><i class="fas fa-plus"></i></button>
    }
</div>*@

<table class="table">
    <thead>
        <tr>
            <th>Título do ficheiro</th>
            <th>Nome do ficheiro</th>
            <th>Data de upload</th>
            <th>Adicionado por</th>
            <th>Última edição por</th>
            <th>Ações</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var file in Model.StoredFiles)
        {
            <tr>
                <td>@file.StoredFileTitle</td>
                <td>
                    <!-- Link to preview the file -->
                    <a href="@Url.Action("PreviewFile", "StoredFiles", new { fileName = file.StoredFileName })" target="_blank">Preview</a>
                    <!-- Optionally, a direct download link -->
                    <a href="@Url.Action("DownloadFile", "StoredFiles", new { fileName = file.StoredFileName })" class="ml-2">Download</a>
                </td>
                <td>@file.UploadDate.ToShortDateString()</td>
                <td>@file.User.FullName</td>
                <td>
                    @if (!string.IsNullOrEmpty(file.LastEditorFullName))
                    {
                        <i class="fas fa-edit"></i> @file.LastEditorFullName
                    }
                    else
                    {
                        <text>N/A</text>
                    }
                </td>

                <td>
                    <!-- Edit Link -->
                    <button type="button" class="btn btn-sm btn-primary edit-file-btn"
                            data-bs-toggle="modal" data-bs-target="#editFileModal"
                            data-id="@file.StoredFileId" data-folder-id="@file.FolderId"
                            data-title="@file.StoredFileTitle">
                        <!-- Add data-title here -->
                        <i class="fas fa-edit"></i>
                    </button>
                    <!-- Delete Link -->
                    <!-- Delete Button triggers Modal -->
                    <button class="btn btn-sm btn-danger delete-file-btn" data-id="@file.StoredFileId" data-bs-toggle="modal" data-bs-target="#confirmDeleteFileModal">
                        <i class="fas fa-trash"></i>
                    </button>

                </td>
            </tr>
        }
    </tbody>
</table>


<!-- Add File Modal -->
<div class="modal fade" id="createFileModal" tabindex="-1" aria-labelledby="createFileModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="createForm" method="post" enctype="multipart/form-data">
                <div class="modal-header">
                    <h5 class="modal-title" id="createFileModalLabel">Adicionar Ficheiro</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="FolderId" value="@Model.FolderId" />
                    <div class="form-group">
                        <label for="storedFileName">Nome do Ficheiro</label>
                        <input type="text" class="form-control" id="storedFileName" name="storedFileName" required>
                    </div>
                    <div class="form-group">
                        <label for="fileData">Ficheiro</label>
                        <input type="file" class="form-control" id="fileData" name="fileData" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary">Adicionar</button>
                </div>
            </form>
        </div>
    </div>
</div>


<!-- Edit File Modal -->
<div class="modal fade" id="editFileModal" tabindex="-1" aria-labelledby="editFileModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="editFileForm" method="post" enctype="multipart/form-data">
                <div class="modal-header">
                    <h5 class="modal-title" id="editFileModalLabel">Edit File</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="editStoredFileId" name="StoredFileId">
                    <div class="form-group">
                        <label for="editStoredFileTitle">File Title</label>
                        <input type="text" class="form-control" id="editStoredFileTitle" name="StoredFileTitle">
                    </div>
                    <div class="form-group">
                        <label for="newFileData">Change file</label>
                        <input type="file" class="form-control" id="newFileData" name="newFileData">
                    </div>
                    <div class="form-group">
                        <label for="editFolderId" class="control-label">Choose folder</label>
                        <select id="editFolderId" class="form-control" name="FolderId"></select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <input type="submit" value="Confirm changes" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
</div>


<!-- Delete File Confirmation Modal -->
<div class="modal fade" id="confirmDeleteFileModal" tabindex="-1" aria-labelledby="confirmDeleteFileModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteFileModalLabel">Confirmar Exclusão do Ficheiro</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Tem certeza de que deseja excluir este ficheiro? Esta ação não pode ser desfeita.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" id="confirm-delete-file">Excluir</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        $(document).ready(function () {
            $('#createForm').submit(function (e) {
                e.preventDefault();
                var formData = new FormData(this);
                $.ajax({
                    url: '@Url.Action("Create", "StoredFiles")',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        $('#createFileModal').modal('hide');
                        // Refresh part of your page or show success message
                        alert('Ficheiro adicionado com sucesso');
                        location.reload(); // For simplicity, just reload the page to see the new file.
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert('Erro ao adicionar ficheiro: ' + textStatus);
                    }
                });
            });
        });
    </script>



    <script>
        $(document).ready(function () {
            // Example of populating the folder dropdown
            // Assuming `folders` is available and contains your folders data
            var folders = @Html.Raw(ViewBag.FoldersJson); // Make sure to encode your folders data into a ViewBag in your controller
            folders.forEach(function (folder) {
                $('#editFolderId').append(new Option(folder.Name, folder.FolderId));
            });

            $('.edit-file-btn').on('click', function () {
                var fileId = $(this).data('id');
                var folderId = $(this).data('folder-id');
                var fileTitle = $(this).data('title'); // Get the title from data attribute

                // Set the values in the form, including the title
                $('#editStoredFileId').val(fileId);
                $('#editFolderId').val(folderId);
                $('#editStoredFileTitle').val(fileTitle); // Set the input box value to the current title
            });
        });
    </script>

    <script>
        $('#editFileForm').submit(function (e) {
            e.preventDefault();

            var formData = new FormData(this);
            var fileId = $('#editStoredFileId').val(); // Get the file ID to construct the URL

            $.ajax({
                url: '@Url.Action("Edit", "StoredFiles")/' + fileId,
                type: 'POST',
                data: formData,
                contentType: false,
                processData: false,
                success: function (response) {
                    $('#editFileModal').modal('hide');
                    // Use the success response to decide if the page should be reloaded
                    if (response.success) {
                        // Optionally, display a success message before reloading
                        alert('File edited successfully.');
                        // Reload the current page to reflect the changes
                        location.reload();
                    } else {
                        // Handle the case where edit was not successful
                        alert('Error: ' + response.message);
                    }
                },
                error: function (xhr, status, error) {
                    var errorMessage = xhr.status + ': ' + xhr.statusText;
                    console.log('Error - ' + errorMessage);
                    alert('Error - ' + errorMessage);
                }
            });
        });
    </script>


    <script>
        $(document).ready(function () {
            var fileIdToDelete = 0;
            $('.delete-file-btn').on('click', function () {
                fileIdToDelete = $(this).data('id'); // Set the file ID to delete
            });

            $('#confirm-delete-file').on('click', function () {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("AjaxDeleteFile", "StoredFiles")/' + fileIdToDelete,
                    headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                    success: function (response) {
                        if (response.success) {
                            // Close modal and show success message or remove the file row from the table
                            $('#confirmDeleteFileModal').modal('hide');
                            location.reload(); // Or better, remove the row for the deleted file
                        } else {
                            // Handle failure
                            alert('Error: ' + response.message);
                        }
                    },
                    error: function () {
                        alert('Something went wrong.');
                    }
                });
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });
    </script>
}