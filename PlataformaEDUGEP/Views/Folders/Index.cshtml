@model IEnumerable<PlataformaEDUGEP.Models.Folder>

@{
    ViewData["Title"] = "Pastas";
    var folderLikeStatus = ViewBag.FolderLikeStatus as Dictionary<int, bool>;
    var allTags = ViewBag.AllTags as SelectList;
    var selectedTagIds = ViewBag.SelectedTagIds as int[]; // For retaining selected tags
}

    <h1>Pastas</h1>

<div class="mb-3">
    @using (Html.BeginForm("Index", "Folders", FormMethod.Get, new { @class = "form-inline search-container" }))
    {
        <div class="input-group mb-2">
            <div class="input-group-prepend">
                <span class="input-group-text" id="basic-addon1"><i class="fas fa-search fa-2x"></i></span>
            </div>
            @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control search-input", @type = "search", @placeholder = "Introduza o nome de uma pasta..." })
            <div class="input-group-append">
                <button class="btn btn-outline-secondary fs-5 p-2" type="submit">Procurar</button>
            </div>
        </div>
        <div id="searchResultsDropdown" class="search-results-dropdown" style="display: none;">
            <!-- Search results will be appended here -->
        </div>

        <!-- Tag Filtering Setup -->
        <div class="form-group">
            <label for="selectedTagIds">Etiquetas</label>
            @Html.ListBox("selectedTagIds", allTags, new { @class = "form-control select2-searchable", @multiple = "multiple" })

        </div>

        <div class="mb-3">
            <span class="mr-3 align-self-center"><strong>Ordenar:</strong></span>
            <button name="sortOrder" value="@ViewBag.NameSortParm" type="submit" class="btn btn-link">Nome @(ViewBag.NameSortParm == "name_desc" ? "↓" : "↑")</button>
            <button name="sortOrder" value="@ViewBag.DateSortParm" type="submit" class="btn btn-link">Data de Criação @(ViewBag.DateSortParm == "date_desc" ? "↓" : "↑")</button>
        </div>
    }

    @if (!string.IsNullOrEmpty(ViewBag.CurrentFilter as string) || (selectedTagIds != null && selectedTagIds.Length > 0))
    {
        <a asp-action="Index" asp-route-searchString="" asp-route-sortOrder="" asp-route-selectedTagIds="" class="btn btn-secondary mr-3">
            <i class="fas fa-times"></i> Limpar filtros
        </a>
    }
</div>

<!-- Trigger Button for Create Modal -->
@if (User.IsInRole("Teacher") || User.IsInRole("Admin"))
{
    <div class="d-flex justify-content-end mb-3">
        <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createFolderModal"><i class="fas fa-plus"></i></button>
    </div>
}

<!-- Display the no results message if no folders are found -->
@if (!Model.Any())
{
    if (ViewBag.NoResultsFound != null)
    {
        <div class="alert alert-info" role="alert">
            @ViewBag.NoResultsFound
        </div>
    }
    else
    {
        <div class="alert alert-info" role="alert">
            Não existem pastas para mostrar.
        </div>
    }
}
else
{
    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card position-relative">
                    <div class="position-absolute top-0 start-0 m-2 d-flex align-items-center">
                        <!-- Visibility Icon -->
                        <i class="@(item.IsHidden ? "fas fa-eye-slash" : "fas fa-eye") me-2" title="@(item.IsHidden ? "Visível apenas para professores" : "Visível para todos")"></i>

                        <!-- Like Button Form -->
                        @if (folderLikeStatus.ContainsKey(item.FolderId) && folderLikeStatus[item.FolderId])
                        {
                            <form asp-action="ToggleLike" method="post" class="me-2">
                                <input type="hidden" name="folderId" value="@item.FolderId" />
                                <button type="submit" class="btn btn-light btn-sm">
                                    <i class="fas fa-heart text-danger"></i>
                                </button>
                            </form>
                        }
                        else
                        {
                            <form asp-action="ToggleLike" method="post" class="me-2">
                                <input type="hidden" name="folderId" value="@item.FolderId" />
                                <button type="submit" class="btn btn-light btn-sm">
                                    <i class="far fa-heart"></i>
                                </button>
                            </form>
                        }
                    </div>

                    @if (User.IsInRole("Teacher") || User.IsInRole("Admin"))
                    {
                        <div class="position-absolute top-0 end-0 m-2">
                            <!-- Trigger for Edit Modal -->
                            <button class="btn btn-primary mx-1 btn-sm edit-folder-btn" data-id="@item.FolderId" data-bs-toggle="modal" data-bs-target="#editFolderModal"><i class="fas fa-pencil-alt"></i></button>
                            <button class="btn btn-danger mx-1 btn-sm delete-folder-btn" data-id="@item.FolderId" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal"><i class="fas fa-trash"></i></button>
                        </div>
                    }
                    <div class="card-body text-center">
                        <h5 class="card-title">@Html.DisplayFor(modelItem => item.Name)</h5>
                        <p class="card-text">Data de criação: @item.CreationDate.ToString("dd/MM/yyyy")</p>

                        <p class="card-text">
                            Criado por: Professor(a)
                            @if (item.User != null)
                            {
                                @Html.ActionLink(item.User.FullName, "Details", "Profiles", new { id = item.User.Id }, new { @class = "creator-link" })
                            }
                            else
                            {
                                <span>[Unknown User]</span>
                            }
                        </p>

                        <p class="card-text">
                            Etiquetas:
                            @foreach (var tag in item.Tags)
                            {
                                <span class="badge bg-info">@tag.Name</span>
                            }
                        </p>
                        <a href="@Url.Action("Details", "Folders", new { id = item.FolderId })" class="btn btn-secondary">Abrir</a>
                    </div>
                </div>
            </div>
        }
    </div>
}

<!-- Create Folder Modal -->
<div class="modal fade" id="createFolderModal" tabindex="-1" aria-labelledby="createFolderModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createFolderModalLabel">Criar Pasta</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- The form will be loaded here via JavaScript -->
            </div>
        </div>
    </div>
</div>

<!-- Edit Folder Modal -->
<div class="modal fade" id="editFolderModal" tabindex="-1" aria-labelledby="editFolderModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editFolderModalLabel">Editar Pasta</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- The form and inputs will be loaded here via JavaScript -->
            </div>
        </div>
    </div>
</div>

<!-- Delete Folder Modal -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteFolderModalLabel">Apagar Pasta</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Tem a certeza que deseja apagar esta pasta? Esta ação não pode ser desfeita.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger btn-delete-confirm">Apagar Pasta</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        $(document).ready(function () {
            // Load Edit Form into Modal
            $('.edit-folder-btn').click(function () {
                var folderId = $(this).data('id');
                var url = '/Folders/Edit/' + folderId;
                $.get(url, function (data) {
                    $('#editFolderModal .modal-body').html(data);
                    $('#editFolderModal').modal('show');
                });
            });

            // AJAX submission for Edit
            $(document).on('submit', '#editFolderForm', function (event) {
                event.preventDefault();
                var form = $(this);
                $.ajax({
                    type: form.attr('method'),
                    url: form.attr('action'),
                    data: form.serialize(),
                    success: function (response) {
                        $('#editFolderModal').modal('hide');
                        location.reload(); // Reload the page to reflect the changes
                    },
                    error: function (xhr, status, error) {
                        console.error("Error updating folder: ", xhr.responseText);
                    }
                });
            });

            // Event handler for opening the create modal
            $('#createFolderModal').on('show.bs.modal', function () {
                var url = '@Url.Action("CreateModal", "Folders")';
                $.get(url, function (data) {
                    $('#createFolderModal .modal-body').html(data);
                });
            });

            // AJAX submission for Create
            $(document).on('submit', '#createFolderForm', function (event) {
                event.preventDefault();
                var form = $(this);
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("Create", "Folders")',
                    data: form.serialize(),
                    success: function (response) {
                        $('#createFolderModal').modal('hide');
                        location.reload(); // Reload the page to show the new folder
                    },
                    error: function (xhr, status, error) {
                        console.error("Error creating folder: ", xhr.responseText);
                    }
                });
            });

            // Event handler for delete confirmation
            $('.delete-folder-btn').click(function () {
                var folderId = $(this).data('id');
                $('#confirmDeleteModal').data('id', folderId);
                $('#confirmDeleteModal').modal('show');
            });

            // AJAX submission for Delete
            $('#confirmDeleteModal').on('click', '.btn-delete-confirm', function () {
                var folderId = $('#confirmDeleteModal').data('id');
                $.ajax({
                    type: 'POST',
                    url: '/Folders/Delete/' + folderId,
                    headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                    success: function (response) {
                        $('#confirmDeleteModal').modal('hide');
                        location.reload(); // Reload the page to reflect the deletion
                    },
                    error: function (xhr, status, error) {
                        console.error("Error deleting folder: ", xhr.responseText);
                    }
                });
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            // Initialize Select2 on elements with the class 'select2-searchable'
            $('.select2-searchable').select2({
                placeholder: "Selecionar etiquetas",
                minimumInputLength: 2,
                language: {
                    inputTooShort: function () {
                        return ""; // Returning empty string to hide the 'input too short' message
                    },
                    noResults: function () {
                        return "Nenhuma etiqueta associada";
                    },
                    searching: function () {
                        return "A procurar...";
                    }
                },
                escapeMarkup: function (markup) {
                    return markup;
                },
                allowClear: true,
                ajax: {
                    url: '@Url.Action("GetTags", "Folders")', // Adjust the URL as needed
                    dataType: 'json',
                    delay: 250,
                    data: function (params) {
                        return {
                            searchTerm: params.term // search term
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: data.results
                        };
                    },
                    cache: true
                }
            });

            // After initializing Select2, set visibility back to visible for these elements
            // to avoid the flicker effect.
            $('.select2-searchable').css('visibility', 'visible');

            // The rest of your document.ready function goes here...
        });
    </script>

    <script>
        $(document).ready(function () {
            // Trigger search operation when the user types in the search box
            $('.search-input').on('input', function () {
                var searchTerm = $(this).val();

                // Only proceed if the searchTerm is not empty and is more than 2 characters
                if (searchTerm.length > 1) {
                    $.ajax({
                        url: '@Url.Action("SearchFolders", "Folders")', // Adjust the URL as needed
                        type: 'GET',
                        data: { searchString: searchTerm },
                        success: function (data) {
                            $('#searchResultsDropdown').empty().show();
                            if (data.length > 0) {
                                data.forEach(function (folder) {
                                    $('#searchResultsDropdown').append('<a href="/Folders/Details/' + folder.folderId + '" class="dropdown-item">' + folder.name + '</a>');
                                });
                            } else {
                                $('#searchResultsDropdown').append('<div class="dropdown-item">Nenhuma pasta encontrada</div>');
                            }
                        }
                    });
                } else {
                    $('#searchResultsDropdown').empty().hide();
                }
            });

            // Adjust dropdown width and position to match the search input box
            $('.search-input').on('input', function () {
                var inputWidth = $(this).outerWidth(); // Get the current width of the input box
                var inputOffset = $(this).offset().left - $(this).parent().offset().left; // Get the left position of the input box relative to its parent
                $('#searchResultsDropdown').width(inputWidth); // Set the width of the dropdown
                $('#searchResultsDropdown').css('left', inputOffset + 'px'); // Adjust the left position of the dropdown
            });

            // Close dropdown when clicking outside of it
            $(document).on('click', function (e) {
                if (!$(e.target).closest('.search-input, #searchResultsDropdown').length) {
                    $('#searchResultsDropdown').hide();
                }
            });
        });
    </script>
}




